export default SPSParser;
declare class SPSParser {
    /**
     *
     * @param {Uint8Array} uint8array
     * @return {Uint8Array}
     */
    static _ebsp2rbsp(uint8array: Uint8Array): Uint8Array;
    /**
     * @param {Uint8Array} uint8array
     * @return {{width: *, general_profile_idc: number, chromaFormatIdc: *, general_level_idc: number, general_tier_flag: number, bitDepthLumaMinus8: (*|number), bitDepthChromaMinus8: (*|number), general_profile_space: number, height: *}}
     */
    static parseSPS(uint8array: Uint8Array): {
        width: any;
        general_profile_idc: number;
        chromaFormatIdc: any;
        general_level_idc: number;
        general_tier_flag: number;
        bitDepthLumaMinus8: (any | number);
        bitDepthChromaMinus8: (any | number);
        general_profile_space: number;
        height: any;
    };
    /**
     * @param gb
     * @param maxSubLayersMinus1
     * @return {{general_profile_idc: (*|number), general_level_idc: (*|number), general_tier_flag: (*|number), general_profile_space: (*|number)}}
     */
    static _readProfileTierLevel(gb: any, maxSubLayersMinus1: any): {
        general_profile_idc: (any | number);
        general_level_idc: (any | number);
        general_tier_flag: (any | number);
        general_profile_space: (any | number);
    };
    /**
     *
     *  @param {any} gb
     * @param {number}count
     */
    static _skipScalingList(gb: any, count: number): void;
    /**
     *
     * @param {number} profileIdc
     * @return {string}
     */
    static getProfileString(profileIdc: number): string;
    /**
     * @param {number} levelIdc
     * @return {string}
     */
    static getLevelString(levelIdc: number): string;
    /**
     * @param {number} chroma
     * @return {string}
     */
    static getChromaFormatString(chroma: number): string;
    /**
     * @param {any} spsConfig
     * @return {any}
     */
    static toVideoMeta(spsConfig: any): any;
}
