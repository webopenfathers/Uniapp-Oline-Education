'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _xgplayerHelperTransmuxers = require('xgplayer-helper-transmuxers');

var _xgplayerHelperUtils = require('xgplayer-helper-utils');

var _xgplayerHelperModels = require('xgplayer-helper-models');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Logger = function () {
  function Logger() {
    _classCallCheck(this, Logger);
  }

  _createClass(Logger, [{
    key: 'warn',
    value: function warn() {}
  }]);

  return Logger;
}();

exports.default = {
  FlvDemuxer: _xgplayerHelperTransmuxers.FlvDemuxer,
  FetchLoader: _xgplayerHelperUtils.FetchLoader,
  Tracks: _xgplayerHelperModels.Tracks,
  XgBuffer: _xgplayerHelperModels.Buffer,
  Logger: Logger
};