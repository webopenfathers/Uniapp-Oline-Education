export default FlvDemuxer;
declare class FlvDemuxer {
    /**
     * If the stream has audio or video.
     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.
     */
    static getPlayType(streamFlag: number): {
        hasVideo: boolean;
        hasAudio: boolean;
    };
    TAG: string;
    _firstFragmentLoaded: boolean;
    _trackNum: number;
    _hasScript: boolean;
    _videoMetaChange: boolean;
    _audioMetaChange: boolean;
    _hasVideoSequence: boolean;
    _hasAudioSequence: boolean;
    demuxer: Demuxer;
    init(): void;
    handleAudioMetaParsed(meta: any): void;
    handleVideoMetaParsed(meta: any): void;
    handleSeiParsed(seiObj: any): void;
    handleVideoSampleParsed(sample: any): void;
    handleAudioSampleParsed(sample: any): void;
    handleScriptTagParsed(onMetaData: any): void;
    handleFileHeaderParsed({ hasVideo, hasAudio }: {
        hasVideo: any;
        hasAudio: any;
    }): void;
    demux(): void;
    /**
     * init default video track configs
     */
    initVideoTrack(): void;
    /**
     * init default audio track configs
     */
    initAudioTrack(): void;
    get loaderBuffer(): any;
    get tracks(): any;
    get logger(): any;
    destroy(): void;
}
import Demuxer from "./demuxer";
